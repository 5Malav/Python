# -*- coding: utf-8 -*-
"""Python - Set.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14IwshUHKy915JCPqNB-C4FHPsWJnr5Xq

Set:-
--> set is an unordered collection of distinct hashable objects.
--> commonly used for membership testing, removing duplicate from a sequence and computing mathematical operations such as intersection, union, difference and symmetric difference.

set:- its a mutable contents can be changed using methods like add() and remove()

frozenset():-
this type of set is not mutable and its content cannot be altered after it is created.

it can be used as dictionary key or as an element of other set.

**Contents**

**create a text in python**
"""

setx=set()
print(setx)

n=set([0,1,2,3,4,5])
print(n)

"""**Iteration over set**"""

"""we can mover over each of the items in a set using a loop"""
n=set([0,1,2,3,4,5])

for i in n:
  print(i)

"""**Add numbers in Python set**"""

#empty set

color_set=set()

#add a single member

color_set.add("Red")

print(color_set)

#add multiple items

color_set.update(["black","white"])
print(color_set)

"""**Remove item from set**"""

n=set([0,1,2,3,4,5])
n.pop()
print(n)#wil remove 0

n.pop()
print(n)#will remove 1

#remove() function

n=set([0,1,2,3,4,5])
n.remove(0)
print(n)

#discard function

n=set([0,1,2,3,4,5])
n.discard(2)
print(n)

"""**Intersection of Set**"""

setx=set(["white","black"])
sety=set(["black","blue"])

setz=setx&sety
print(setz)

"""**Union of sets**"""

setx=set(["black","white"])
sety=set(["blue","red"])

setz=setx|sety
print(setz)

"""**Set difference**"""

setx=set(["black","white"])
sety=set(["white","red"])

setz=setx-sety
print(setz)#will print items which are not in setx

"""**Symmetric difference**"""

setx=set(["black","white"])
sety=set(["white","red"])

setz=setx^sety
print(setz)#will not print common items from both sets

"""**Subset and Superset**"""

setx=(["black","white"])
sety=(["white","red"])

issubset=setx<=sety
print(issubset)

issubset1=sety<=setx
print(issubset1)

issuperset=setx>=sety
print(issuperset)

setw=set(["black","white","blue","red"])
sety=set(["blue","red"])

issubset=setw<=sety
print(issubset)

issuperset=setw>=sety
print(issuperset)

"""**Shallow copy of sets**

"""

setx= set(["black","white"])

setz=setx.copy()
print(setz)

"""**Clear set**"""

setx=set(["white","black","blue","red"])

sety=setx.clear()
print(sety)